// Code generated by MockGen. DO NOT EDIT.
// Source: .\configFetcher.go

// Package configFetcher is a generated GoMock package.
package configFetcher

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockConfigFetcher is a mock of ConfigFetcher interface.
type MockConfigFetcher struct {
	ctrl     *gomock.Controller
	recorder *MockConfigFetcherMockRecorder
}

// MockConfigFetcherMockRecorder is the mock recorder for MockConfigFetcher.
type MockConfigFetcherMockRecorder struct {
	mock *MockConfigFetcher
}

// NewMockConfigFetcher creates a new mock instance.
func NewMockConfigFetcher(ctrl *gomock.Controller) *MockConfigFetcher {
	mock := &MockConfigFetcher{ctrl: ctrl}
	mock.recorder = &MockConfigFetcherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConfigFetcher) EXPECT() *MockConfigFetcherMockRecorder {
	return m.recorder
}

// GetConfig mocks base method.
func (m *MockConfigFetcher) GetConfig() (Config, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConfig")
	ret0, _ := ret[0].(Config)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetConfig indicates an expected call of GetConfig.
func (mr *MockConfigFetcherMockRecorder) GetConfig() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConfig", reflect.TypeOf((*MockConfigFetcher)(nil).GetConfig))
}
